# Name
name: 'IgrOS-Kernel CI/CD'

# Triggered on push
on:
  push:
    branches: [ 'master' ]
  pull_request:
    # The branches below must be a subset of the branches above
    branches: [ 'master' ]

# Project jobs
jobs:

  # Build Kernel
  BuildKernel:

    # Name
    name: 'Build with CMake'
    # OS
    runs-on: ubuntu-latest

    # Environment variables
    env:
      IGROS_KERNEL_DIR_BUILD: "${{ github.workspace }}/build"
      IGROS_KERNEL_DIR_INSTALL: "${{ github.workspace }}/install"
      CCACHE_BASEDIR: "${{ github.workspace }}/.ccache/build-linux-${{ matrix.compiler }}-x86_64-debug"
      CCACHE_DIR: "${{ github.workspace }}/.ccache/build-linux-${{ matrix.compiler }}-x86_64-debug/cache"

    # Strategy with languages matrix
    strategy:
      fail-fast: false
      max-parallel: 4
      matrix:
        arch: [ 'i386', 'x86_64' ]
        compiler: [ 'clang++', 'g++' ]

    # Job steps
    steps:

    # Checkout
    - name: 'Checkout repository'
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    # Install dependencies
    - name: 'Install Dependencies'
      shell: bash
      run: |
        sudo apt update
        sudo apt install -y --no-install-recommends ccache cmake doxygen graphviz g++-multilib gcc-multilib mtools ninja-build xorriso

    # Install Clang 16.0.0
    - name: 'Install Clang 16.0.0'
      shell: bash
      run: |
        wget https://apt.llvm.org/llvm.sh
        chmod +x llvm.sh
        sudo ./llvm.sh 16 all
        sudo update-alternatives --install /usr/bin/clang++ clang++ /usr/bin/clang++-16 160
        sudo update-alternatives --install /usr/bin/ld.lld ld.lld /usr/bin/ld.lld-16 160

    # Restore Build Cache
    - name: 'Restore Build Cache'
      uses: actions/cache@v3
      with:
        path: ${{ env.IGROS_KERNEL_DIR_BUILD }}
        key: build-${{ matrix.compiler }}-${{ matrix.arch }}-${{ github.sha }}
        restore-keys: |
          build-${{ matrix.compiler }}-${{ matrix.arch }}-

    # Restore CCache Cache
    - name: 'Restore CCache Cache'
      uses: actions/cache@v3
      with:
        path: ${{ env.CCACHE_BASEDIR }}
        key: ccache-${{ matrix.compiler }}-${{ matrix.arch }}-${{ github.sha }}
        restore-keys: |
          ccache-${{ matrix.compiler }}-${{ matrix.arch }}-

    # Configure
    - name: 'CMake Configure'
      shell: bash
      run: |
        mkdir -p ${{ env.CCACHE_BASEDIR }}
        cmake --preset="config-linux-${{ matrix.compiler }}-${{ matrix.arch }}-debug"

    # Build
    - name: 'CMake Build'
      shell: bash
      run: |
        cmake --build --preset="build-linux-${{ matrix.compiler }}-${{ matrix.arch }}-debug" --target all --parallel

    # Install
    - name: 'CMake Install'
      shell: bash
      run: |
        cmake --build --preset="build-linux-${{ matrix.compiler }}-${{ matrix.arch }}-debug" --target install

    # Kernel Artifacts
    - name: 'Kernel Artifacts'
      uses: actions/upload-artifact@v4
      with:
        name: ${{ matrix.compiler }}-${{ matrix.arch }}-kernel
        path: |
          ${{ env.IGROS_KERNEL_DIR_INSTALL }}/Debug/config-linux-${{ matrix.compiler }}-${{ matrix.arch }}-debug/iso/boot/kernel.bin
          ${{ env.IGROS_KERNEL_DIR_INSTALL }}/Debug/config-linux-${{ matrix.compiler }}-${{ matrix.arch }}-debug/kernel.iso
        retention-days: 7

    # CCache Statistics
    - name: 'CCache Statistics'
      shell: bash
      run: |
        ccache -sv

